@page "/register"
@using MauiApp1.Models
@inject UserService UserService
@inject NavigationManager NavigationManager
@using MauiApp1.Components.Layout
@layout FirstLayout

<div class="flex items-center justify-center min-h-screen bg-purple-700">
    <div class="bg-white bg-opacity-20 backdrop-blur-lg shadow-xl rounded-2xl p-10 w-96 max-w-lg border border-opacity-30 border-white">
        <h4 class="text-2xl font-extrabold text-center text-white mb-6">Expenses Tracker</h4>
        <h6 class="text-md font-bold text-center text-white mb-2">Create your account to track your expenses.</h6>

        @if (!string.IsNullOrEmpty(Message))
        {
            <p class="text-white-300 text-sm mb-4 text-center">@Message</p>
        }

        <div class="space-y-6">

            <!-- Username -->
            <div>
                <label class="block text-sm font-medium text-white" for="username">Username</label>
                <div class="relative mt-1">
                    <input id="username" @bind="RegisterUsername" placeholder="Enter your username"
                           class="w-full px-4 py-3 pl-10 border border-gray-300 rounded-lg bg-white bg-opacity-70 focus:outline-none focus:ring-2 focus:ring-green-400 transition duration-300" />
                    <span class="absolute inset-y-0 left-3 flex items-center text-gray-400">
                        <i class="fas fa-user-circle"></i>
                    </span>
                </div>
            </div>

            <!-- Full Name -->
            <div>
                <label class="block text-sm font-medium text-white" for="fullName">Full Name</label>
                <div class="relative mt-1">
                    <input id="fullName" @bind="RegisterFullName" placeholder="Enter your full name"
                           class="w-full px-4 py-3 pl-10 border border-gray-300 rounded-lg bg-white bg-opacity-70 focus:outline-none focus:ring-2 focus:ring-green-400 transition duration-300" />
                    <span class="absolute inset-y-0 left-3 flex items-center text-gray-400">
                        <i class="fas fa-user"></i>
                    </span>
                </div>
            </div>
            <!-- Contact Number -->
            <div>
                <label class="block text-sm font-medium text-white" for="contactNumber">Contact Number</label>
                <div class="relative mt-1">
                    <input id="contactNumber" @bind="RegisterContactNumber" placeholder="Enter your contact number" type="tel"
                           class="w-full px-4 py-3 pl-10 border border-gray-300 rounded-lg bg-white bg-opacity-70 focus:outline-none focus:ring-2 focus:ring-green-400 transition duration-300" />
                    <span class="absolute inset-y-0 left-3 flex items-center text-gray-400">
                        <i class="fas fa-phone"></i>
                    </span>
                </div>
            </div>

            <!-- Email -->
            <div>
                <label class="block text-sm font-medium text-white" for="email">Email</label>
                <div class="relative mt-1">
                    <input id="email" @bind="RegisterEmail" @oninput="ValidateEmail" placeholder="Enter your email" type="email"
                           class="w-full px-4 py-3 pl-10 border border-gray-300 rounded-lg bg-white bg-opacity-70 focus:outline-none focus:ring-2 focus:ring-green-400 transition duration-300" />
                    <span class="absolute inset-y-0 left-3 flex items-center text-gray-400">
                        <i class="fas fa-envelope"></i>
                    </span>
                </div>
                @if (!IsEmailValid)
                {
                    <p class="text-red-500 text-sm mt-2">Please enter a valid email address.</p>
                }
            </div>

            <!-- Currency Selection -->
            <div>
                <label class="block text-sm font-medium text-white" for="currency">Currency</label>
                <div class="relative mt-1">
                    <select id="currency" @bind="SelectedCurrency" class="w-full px-4 py-3 pl-10 border border-gray-300 rounded-lg bg-white bg-opacity-70 focus:outline-none focus:ring-2 focus:ring-green-400 transition duration-300">
                        <option value="NRP">NRP</option>
                        <option value="USD">USD</option>

                    </select>
                </div>
            </div>

            <!-- Password -->
            <div>
                <label class="block text-sm font-medium text-white" for="password">Password</label>
                <div class="relative mt-1">
                    <input id="password" @bind="RegisterPassword" placeholder="Enter your password" type="password"
                           class="w-full px-4 py-3 pl-10 border border-gray-300 rounded-lg bg-white bg-opacity-70 focus:outline-none focus:ring-2 focus:ring-green-400 transition duration-300" />
                    <span class="absolute inset-y-0 left-3 flex items-center text-gray-400">
                        <i class="fas fa-lock"></i>
                    </span>
                </div>
            </div>

            <!-- Confirm Password -->
            <div>
                <label class="block text-sm font-medium text-white" for="confirmPassword">Confirm Password</label>
                <div class="relative mt-1">
                    <input id="confirmPassword" @bind="ConfirmPassword" placeholder="Confirm your password" type="password"
                           class="w-full px-4 py-3 pl-10 border border-gray-300 rounded-lg bg-white bg-opacity-70 focus:outline-none focus:ring-2 focus:ring-green-400 transition duration-300" />
                    <span class="absolute inset-y-0 left-3 flex items-center text-gray-400">
                        <i class="fas fa-lock"></i>
                    </span>
                </div>
            </div>

            <!-- Register Button -->
            <button @onclick="HandleRegistration"
                    class="w-full bg-gradient-to-r from-purple-500 via-teal-500 to-purple-500 hover:from-purple-600 hover:to-blue-600 text-white py-3 rounded-lg shadow-lg focus:outline-none focus:ring-2 focus:ring-white-400 transition duration-300"
                    disabled="@(IsEmailValid == false)">
                Register
            </button>

            <div class="text-center mt-6">
                <a href="/" class="text-white text-sm hover:text-purple-200 hover:underline">Already have account? Login</a>
            </div>
        </div>
    </div>
</div>

@code {
    private string RegisterUsername = "";
    private string RegisterPassword = "";
    private string ConfirmPassword = "";
    private string RegisterEmail = "";
    private string RegisterFullName = "";
    private string RegisterContactNumber = "";
    private string SelectedCurrency = "NRP";
    private string Message = "";
    private bool IsEmailValid { get; set; } = true;
    private List<User> Users = new();

    private void ValidateEmail(ChangeEventArgs e)
    {
        RegisterEmail = e.Value?.ToString();
        IsEmailValid = System.Text.RegularExpressions.Regex.IsMatch(RegisterEmail ?? string.Empty,
            @"^[^@\s]+@[^@\s]+\.[^@\s]+$");
    }

    protected override void OnInitialized()
    {
        // Loading users from UserService when the component is initialized
        Users = UserService.LoadUsers();
    }

    private void HandleRegistration()
    {
        // Validate input fields
        if (string.IsNullOrWhiteSpace(RegisterUsername) || string.IsNullOrWhiteSpace(RegisterPassword) ||
            string.IsNullOrWhiteSpace(RegisterFullName) || string.IsNullOrWhiteSpace(RegisterContactNumber))
        {
            Message = "All fields are required.";
            return;
        }

        if (RegisterPassword != ConfirmPassword)
        {
            Message = "Passwords do not match.";
            return;
        }

        if (Users.Any(u => u.Username == RegisterUsername))
        {
            Message = "Username already exists.";
            return;
        }

        // Create a new user and add them to the list
        var newUser = new User
            {
                Username = RegisterUsername,
                Password = UserService.HashPassword(RegisterPassword),
                Email = RegisterEmail,
                FullName = RegisterFullName,
                ContactNumber = RegisterContactNumber,
                Currency = SelectedCurrency // Set the selected currency
            };

        Users.Add(newUser);
        UserService.SaveUsers(Users);

        Message = "Registration successful. Redirecting to login...";
        Task.Delay(2000).ContinueWith(_ => NavigationManager.NavigateTo("/"));
    }
}
